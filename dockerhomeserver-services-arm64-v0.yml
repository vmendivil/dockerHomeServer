version: "3.9"

networks:

  dockervlan:
    name: dockervlan
    driver: macvlan
    driver_opts:
      parent: eth0 # using ifconfig
    ipam:
      config:
        - subnet: $DOCKERVLAN_SUBNET
          ip_range: $DOCKERVLAN_IP_RANGE
          gateway: $DOCKERVLAN_GATEWAY

services:

############################# SYSTEM

  # Dozzle - Real-time Docker Log Viewer
  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - $DOZZLE_PORT:8080
    environment:
#      DOZZLE_LEVEL: info
      DOZZLE_TAILSIZE: 300
#      DOZZLE_FILTER: "status=running"
#      DOZZLE_FILTER: "label=log_me" # limits logs displayed to containers with this label
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

############################# NETWORK

  # AdGuard Home - DNS AdBlocking
  # https://www.smarthomebeginner.com/adguard-home-docker-compose-guide/
  # Run to create bridge between host and macvlan, and run on every OS reboot/restart, change ip addresses as needed:
  #     sudo ip link add dns_bridge_vlan link eth0 type macvlan mode bridge && sudo ip addr add 192.168.1.16/32 dev dns_bridge_vlan && sudo ip link set dns_bridge_vlan up && sudo ip route add 192.168.1.15/32 dev dns_bridge_vlan
  adguardhome:
    container_name: adguardhome
    image: adguard/adguardhome
    security_opt:
      - no-new-privileges:true
    restart: always
    # profiles: ["core", "all"]
    networks:
      dockervlan:
        ipv4_address: $ADGUARDHOME_IPV4_ADDRESS
    ports:
      - 53/udp 
      - 67/udp 
      - 68/tcp 
      - 68/udp 
      - 80/tcp 
      - 443/tcp 
      - 853/tcp 
      - 3000/tcp 
    volumes:
      - $SERVICES_DIR/adguard/conf:/opt/adguardhome/conf 
      - $SERVICES_DIR/adguard/work:/opt/adguardhome/work 
      #- $DOCKERDIR/shared/certs/$DOMAINNAME_HOME_SYNOLOGY:/certs

  transmission_openvpn:
    image: haugene/transmission-openvpn:3.0.2-armhf #latest-armhf / 2.13-armhf / 3.0.2-armhf
    container_name: transmission_openvpn
    restart: always # If not always, disable WEBPROXY_ENABLED
    cap_add:
      - NET_ADMIN
    dns:
      #- 8.8.8.8
      #- 8.8.4.4
      - $ADGUARDHOME_IPV4_ADDRESS
    ports:
      - $TRANSMISSIONOPENVPN_GUI_PORT:9091 # GUI
      - $TRANSMISSIONOPENVPN_PORT:8888 # Transmission Port
    devices:
      - /dev/net/tun # This creates a tunnel for Transmission
    volumes:
      - $SERVICES_DIR/transmissionopenvpn:/config
      - $DOWNLOADS_DIR/torrent:/data # Downloads
      - /etc/localtime:/etc/localtime:ro
    environment:
      # Vpn setup
      - CREATE_TUN_DEVICE=true
      - OPENVPN_PROVIDER=$TRANSMISSIONOPENVPN_PROVIDER
      # - OPENVPN_CONFIG=$TRANSMISSIONOPENVPN_CONFIG_FILES # OpenVpn config file names. Can be comma separated
      - OPENVPN_USERNAME=$TRANSMISSIONOPENVPN_USERNAME
      - OPENVPN_PASSWORD=$TRANSMISSIONOPENVPN_PASSWORD
      - OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60 # Restart if connection fails
      - NORDVPN_COUNTRY=$TRANSMISSIONOPENVPN_NORDVPN_COUNTRY
      - NORDVPN_CATEGORY=$TRANSMISSIONOPENVPN_NORDVPN_CATEGORY
      - NORDVPN_PROTOCOL=$TRANSMISSIONOPENVPN_NORDVPN_PROTOCOL
      # Local network
      - LOCAL_NETWORK=$TRANSMISSIONOPENVPN_LOCAL_NETWORK # Match the local network of the host device
      - PUID=$PUID
      - PGID=$PGID
      # Proxy
      - WEBPROXY_ENABLED=false # Enable other containers to use the vpn
      - WEBPROXY_PORT=$TRANSMISSIONOPENVPN_PORT
      # Connections
      - TRANSMISSION_SCRAPE_PAUSED_TORRENTS_ENABLED=false
      - TRANSMISSION_PEER_LIMIT_GLOBAL=1050
      - TRANSMISSION_MAX_PEERS_GLOBAL=1050
      - TRANSMISSION_PEER_LIMIT_PER_TORRENT=50
      - TRANSMISSION_UPLOAD_SLOTS_PER_TORRENT=5
      - TRANSMISSION_DOWNLOAD_QUEUE_ENABLED=true
      - TRANSMISSION_DOWNLOAD_QUEUE_SIZE=20
      - TRANSMISSION_IDLE_SEEDING_LIM=5
      - TRANSMISSION_IDLE_SEEDING_LIMIT=5
      - TRANSMISSION_IDLE_SEEDING_LIMIT_ENABLED=true
      # Files
      # - TRANSMISSION_PREALLOCATION=1
      # Speed
      - TRANSMISSION_RATIO_LIMIT=2
      - TRANSMISSION_RATIO_LIMIT_ENABLED=true
      - TRANSMISSION_SPEED_LIMIT_UP=20
      - TRANSMISSION_SPEED_LIMIT_UP_ENABLED=true
    logging:
      driver: json-file
      options:
        max-size: 10m

  # WireGuard Easy Server
  # On config files, ensure port matches the one set on WIREGUARD_UDP_PORT
  wireguardg_easy:
    container_name: wireguard_easy
    image: weejewel/wg-easy:latest
    hostname: wireguard_easy
    security_opt:
      - no-new-privileges:true
    ports:
      - $WIREGUARD_UDP_PORT:51820/udp # WireGuard
      - $WIREGUARD_TCP_PORT:51821/tcp # UI
    restart: always
    environment:
      - WG_HOST=$WIREGUARD_HOST # wg server
      - PASSWORD=$WIREGUARD_UI_PASSWORD # UI password
      - WG_PERSISTENT_KEEPALIVE=$WIREGUARD_KEEPALIVE
      - WG_DEFAULT_DNS=$ADGUARDHOME_IPV4_ADDRESS
    volumes:
      - $SERVICES_DIR/wireguard_easy:/etc/wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=$WIREGUARD_IP_FORWARD
      - net.ipv4.conf.all.src_valid_mark=$WIREGUARD_ALL_SRV_VALID

############################# MONITORING

  uptime_kuma:
    container_name: uptime_kuma
    image: louislam/uptime-kuma
    restart: unless-stopped
    ports:
      - $UPTIMEKUMA_PORT:3001
    security_opt:
      - no-new-privileges:true
    volumes:
      - $SERVICES_DIR/uptime_kuma:/app/data

############################# DASHBOARD

  # Dashy
  dashy:
    container_name: dashy
    image: lissy93/dashy:arm64v8
    ports:
      - $DASHY_PORT:80
    restart: always
    environment:
      - NODE_ENV=$DASHY_NODE_ENV
      - UID=$PUID
      - GID=$PGID
    volumes:
      - $SERVICES_DIR/dashy/config.yml:/app/public/conf.yml # Create file in advance / mkdir dashy / touch config.yml
    #healthcheck:
      #test: ['CMD', 'node', '/app/services/healthcheck']
      #interval: 1m30s
      #timeout: 10s
      #retries: 3
      #start_period: 40s

############################# WORDPRESS SITE ONE

  # MariaDB
  wp_siteone_mariadb:
    container_name: wp_siteone_mariadb
    image: linuxserver/mariadb:latest
    restart: always
    security_opt:
      - no-new-privileges:true
    ports:
      - $WP_SITEONE_MARIADB_PORT:3306
    volumes:
      - $WP_SITEONE_DIR/mariadb/data:/config
      - $WP_SITEONE_DIR/mariadb/mysql:/var/lib/mysql
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - MYSQL_DATABASE=$WP_SITEONE_DB_NAME
      - MYSQL_ROOT_PASSWORD=$WP_SITEONE_DB_ROOT_PASSWORD
      - MYSQL_USER=$WP_SITEONE_DB_USER
      - MYSQL_PASSWORD=$WP_SITEONE_DB_PASSWORD
    
  # WordPress
    # Create file (volumes) php.conf.uploads.ini and paste below content before container creation:
      #file_uploads = On
      #memory_limit = 64M
      #upload_max_filesize = 64M
      #post_max_size = 64M
      #max_execution_time = 600
  wp_siteone_wordpress:
    container_name: wp_siteone_wordpress
    image: wordpress:latest
    restart: always
    security_opt:
      - no-new-privileges:true
    ports:
      - $WP_SITEONE_WORDPRESS_PORT:80
    links:
      - wp_siteone_mariadb
    volumes:
      - $WP_SITEONE_DIR/www/config/php.conf.uploads.ini:/usr/local/etc/php/conf.d/uploads.ini # Create file in advance
      - $WP_SITEONE_DIR/www/wp-app:/var/www/html
    environment:
      WORDPRESS_DB_HOST: wp_siteone_mariadb
      WORDPRESS_DB_NAME: $WP_SITEONE_DB_NAME
      WORDPRESS_DB_USER: $WP_SITEONE_DB_USER
      WORDPRESS_DB_PASSWORD: $WP_SITEONE_DB_PASSWORD

############################# DEMO SITE

  # MariaDB
  wp_demo_mariadb:
    container_name: wp_demo_mariadb
    image: linuxserver/mariadb:latest
    restart: always
    security_opt:
      - no-new-privileges:true
    ports:
      - $WP_DEMO_MARIADB_PORT:3306
    volumes:
      - $WP_DEMO_DIR/mariadb/data:/config
      - $WP_DEMO_DIR/mariadb/mysql:/var/lib/mysql
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - MYSQL_ROOT_PASSWORD=$WP_DEMO_DB_ROOT_PASSWORD
      - MYSQL_DATABASE=$WP_DEMO_DB_NAME
      - MYSQL_USER=$WP_DEMO_DB_USER
      - MYSQL_PASSWORD=$WP_DEMO_DB_PASSWORD

  # WordPress
    # Create file (volumes) php.conf.uploads.ini and paste below content before container creation:
      #file_uploads = On
      #memory_limit = 64M
      #upload_max_filesize = 64M
      #post_max_size = 64M
      #max_execution_time = 600
  wp_demo_wordpress:
    container_name: wp_demo_wordpress
    image: wordpress:latest
    restart: always
    ports:
      - $WP_DEMO_WORDPRESS_PORT:80
    security_opt:
      - no-new-privileges:true
    links:
      - wp_demo_mariadb
    volumes:
      - $WP_DEMO_DIR/www/config/php.conf.uploads.ini:/usr/local/etc/php/conf.d/uploads.ini # Create file in advance
      - $WP_DEMO_DIR/www/wp-app:/var/www/html # Full wordpress project
    environment:
      WORDPRESS_DB_HOST: wp_demo_mariadb
      WORDPRESS_DB_NAME: $WP_DEMO_DB_NAME
      WORDPRESS_DB_USER: $WP_DEMO_DB_USER
      WORDPRESS_DB_PASSWORD: $WP_DEMO_DB_PASSWORD

############################# PRODUCTIVITY

  # Visual Code Server
  visualcode_server:
    image: lscr.io/linuxserver/code-server:latest
    container_name: visualcode_server
    ports:
      - $VISUALCODE_SERVER_PORT:8443
    restart: unless-stopped
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      #- PASSWORD=password #optional
      #- HASHED_PASSWORD= #optional
      #- SUDO_PASSWORD=password #optional
      #- SUDO_PASSWORD_HASH= #optional
      - PROXY_DOMAIN=$VISUALCODE_SERVER_PROXY_DOMAIN
      - DEFAULT_WORKSPACE=/config/workspace
    volumes:
      - $SERVICES_DIR/visualcode_server/config:/config
