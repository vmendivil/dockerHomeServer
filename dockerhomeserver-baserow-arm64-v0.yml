# All in one

services:
  baserow:
    image: baserow/baserow:latest
    container_name: baserow
    restart: always
    security_opt:
      - no-new-privileges:true
    depends_on:
      baserow_db:
        condition: service_healthy
    environment:
      BASEROW_PUBLIC_URL: $BASEROW_DOMAIN_URL
      DATABASE_HOST: $BASEROW_DATABASE_SERVER_HOST
      DATABASE_NAME: $BASEROW_DATABASE_NAME
      DATABASE_USER: $BASEROW_DATABASE_USER
      DATABASE_PASSWORD: $BASEROW_DATABASE_PASSWORD
      DATABASE_PORT: $BASEROW_POSTGRESDB_PORT
      #EMAIL_SMTP: $BASEROW_EMAIL_SMTP
      #EMAIL_SMTP_HOST: $BASEROW_EMAIL_SMTP_HOST
      #EMAIL_SMTP_PASSWORD: $BASEROW_EMAIL_SMTP_PASSWORD
      #FROM_EMAIL: $BASEROW_FROM_EMAIL
      #EMAIL_SMTP_USE_TLS: $BASEROW_EMAIL_SMTP_USE_TLS
    ports:
      - $BASEROW_FRONTEND_PORT:80
      - $BASEROW_FRONTEND_SSL_PORT:443
    volumes:
      - $SERVICES_DIR/baserow/app/data:/baserow/data

  baserow_db:
    image: postgres:16-alpine
    container_name: baserow_db
    restart: always
    security_opt:
      - no-new-privileges:true
    ports:
      - $BASEROW_POSTGRESDB_PORT:5432
    environment:
      POSTGRES_USER: $BASEROW_DATABASE_USER
      POSTGRES_PASSWORD: $BASEROW_DATABASE_PASSWORD
      POSTGRES_DB: $BASEROW_DATABASE_NAME
    volumes:
      - $SERVICES_DIR/baserow/db/data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $BASEROW_DATABASE_USER -d $BASEROW_DATABASE_NAME"]
      interval: 10s
      timeout: 5s
      retries: 5

  baserow_pgadmin4:
    image: dpage/pgadmin4
    container_name: baserow_pgadmin4
    restart: always
    security_opt:
      - no-new-privileges:true
    ports:
      - $BASEROW_PGADMIN_PORT:80
      - $BASEROW_PGADMIN_TLS_PORT:443
    environment:
      PGADMIN_DEFAULT_EMAIL: $BASEROW_PGADMIN4_USERNAME
      PGADMIN_DEFAULT_PASSWORD: $BASEROW_DATABASE_PASSWORD
    #volumes:
    #  - $SERVICES_DIR/baserow/pgadmin4/servers.json:/pgadmin4/servers.json # Create file in advance
