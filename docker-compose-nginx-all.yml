version: "3.8"

networks:
  ngproxy:
    external:
      name: ngproxy
  database:
    external:
      name: database
  myvpn:
    external:
      name: myvpn

services:

############################# PROXY

  # Nginx Proxy Manager
  nginxmanagerproxy:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: nginxmanagerproxy
    restart: always
    networks:
      - ngproxy
      - database
    ports:
      - 80:80
      - 81:81 # UI
      - 443:443
    volumes:
      - "$PROXYDIR/nginxmanagerproxy/config.json:/app/config/production.json"
      - "$PROXYDIR/nginxmanagerproxy/data:/data"
      - "$PROXYDIR/nginxmanagerproxy/letsencrypt:/etc/letsencrypt"
    links:
      - nginxmanagerproxy_mariadb
    labels:
      # WatchTower
      - "com.centurylinklabs.watchtower.monitor-only=true"

  # MariaDB
  nginxmanagerproxy_mariadb:
    container_name: nginxmanagerproxy_mariadb
    image: yobasystems/alpine-mariadb:latest
    restart: always
    networks:
      - database
    ports:
      - 3306:3306
    volumes:
      - $PROXYDIR/nginxmanagerproxy/mysql:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=$NGINX_ROOT_PASSWORD
      - MYSQL_DATABASE=$NGINX_MYSQL_DATABASE
      - MYSQL_USER=$NGINX_MYSQL_USER
      - MYSQL_PASSWORD=$NGINX_MYSQL_PASSWORD
    labels:
      # WatchTower
      - "com.centurylinklabs.watchtower.monitor-only=true"

  # Cloudflare DDNS - Dynamic DNS Updater
  myownsite-cf-ddns:
    container_name: myownsite-cf-ddns
    image: oznu/cloudflare-ddns:latest
    restart: always
    security_opt:
      - no-new-privileges:true
    environment:
      - API_KEY=$CLOUDFLARE_API_TOKEN
      - ZONE=$DOMAINNAME
      - PROXIED=true
      - RRTYPE=A
      - DELETE_ON_STOP=false
      - DNS_SERVER=1.1.1.1

  # Cloudflare DDNS - Dynamic DNS Updater
  blog-cf-ddns:
    container_name: blog-cf-ddns
    image: oznu/cloudflare-ddns:latest
    restart: always
    security_opt:
      - no-new-privileges:true
    environment:
      - API_KEY=$CLOUDFLARE_API_TOKEN
      - ZONE=$DOMAINNAME_BLOG
      - PROXIED=true
      - RRTYPE=A
      - DELETE_ON_STOP=false
      - DNS_SERVER=1.1.1.1

############################# SYSTEM

  # Fail2ban - Network/Logging Security
    # Other commands: https://www.fail2ban.org/wiki/index.php/Commands
  # Check status of ssh jail:
    # sudo fail2ban-client status sshd
  fail2ban:
    container_name: fail2ban
    image: crazymax/fail2ban:latest
    restart: always
    network_mode: host
    security_opt:
      - no-new-privileges:true
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - /var/log/docker:/var/log/docker
#      - $SERVICESDIR/hass/home-assistant.log:/var/log/home-assistant.log:ro
      - $SERVICESDIR/fail2ban:/data
      - $SERVICESDIR/fail2ban/fail2ban.d:/etc/fail2ban/fail2ban.d
    environment:
      - TZ=$TZ
      - F2B_LOG_LEVEL=INFO
      - F2B_DB_PURGE_AGE=1d # Age at which bans should be purged from the database
      - F2B_IPTABLES_CHAIN=DOCKER-USER # Specifies the iptables chain to which the Fail2Ban rules should be added
#      - SSMTP_HOST=smtp.gmail.com
#      - SSMTP_PORT=465
#      - SSMTP_USER=$SMTP_EMAIL
#      - SSMTP_PASSWORD=$SMTP_PASS # Create an "app password" if you use 2FA
#      - SSMTP_TLS=YES

  # Dozzle - Real-time Docker Log Viewer
  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    restart: unless-stopped
    networks:
      - ngproxy
    security_opt:
      - no-new-privileges:true
    ports:
      - "$DOZZLE_PORT:8080"
    environment:
#      DOZZLE_LEVEL: info
      DOZZLE_TAILSIZE: 300
#      DOZZLE_FILTER: "status=running"
#      DOZZLE_FILTER: "label=log_me" # limits logs displayed to containers with this label
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # Portainer - WebUI for Containers
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: always
    command: --no-analytics # -H unix:///var/run/docker.sock
    networks:
      - ngproxy
    security_opt:
      - no-new-privileges:true
    ports:
      - "$PORTAINER_PORT:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $SERVICESDIR/portainer/data:/data 
    environment:
      - TZ=$TZ
    labels:
      # WatchTower
      - "com.centurylinklabs.watchtower.monitor-only=true"

  # WatchTower - Automatic Docker Container Updates
  watchtower:
    image: containrrr/watchtower:armhf-latest
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      TZ: $TZ
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_REMOVE_VOLUMES: "true"
      WATCHTOWER_INCLUDE_STOPPED: "true"
      WATCHTOWER_NO_STARTUP_MESSAGE: "false"
      WATCHTOWER_SCHEDULE: "0 15 2 * * *" # https://pkg.go.dev/github.com/robfig/cron@v1.2.0#hdr-CRON_Expression_Format

############################# NETWORK

  # Transmission with OpenVpn
  # Setup: https://www.youtube.com/watch?v=aPkRz0U_IPo
  transmission-openvpn:
    image: haugene/transmission-openvpn:3.0.2-armhf #latest-armhf / 2.13-armhf / 3.0.2-armhf
    container_name: transmission-openvpn
    restart: always # If not always, disable WEBPROXY_ENABLED
    networks:
      - myvpn
    cap_add:
      - NET_ADMIN
    dns:
      - 8.8.8.8
      - 8.8.4.4
    ports:
      - "$TRANSMISSIONOPENVPNGUI:9091" # GUI
      - "$TRANSMISSIONOPENVPN:8888" # Transmission Port
    devices:
      - /dev/net/tun # This creates a tunnel for Transmission
    volumes:
      - '$SERVICESDIR/transmissionopenvpn:/config'
      - '$DOWNLOADS/torrent:/data' # Downloads
      - '/etc/localtime:/etc/localtime:ro'
    environment:
      # Vpn setup
      - CREATE_TUN_DEVICE=true
      - OPENVPN_PROVIDER=$OPENVPN_PROVIDER
      # - OPENVPN_CONFIG=CA Toronto # Can be comma separated
      - OPENVPN_USERNAME=$OPENVPN_USERNAME
      - OPENVPN_PASSWORD=$OPENVPN_PASSWORD
      - OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60 # Restart if connection fails
      - LOCAL_NETWORK=$LOCAL_NETWORK # Match the local network of the host device
      - PUID=$PUID
      - PGID=$PGID
      # Proxy
      - WEBPROXY_ENABLED=true # Enable other containers to use the vpn
      - WEBPROXY_PORT=$TRANSMISSIONOPENVPN
      # Connections
      - TRANSMISSION_SCRAPE_PAUSED_TORRENTS_ENABLED=false
      - TRANSMISSION_PEER_LIMIT_GLOBAL=1050
      - TRANSMISSION_MAX_PEERS_GLOBAL=1050
      - TRANSMISSION_PEER_LIMIT_PER_TORRENT=50
      - TRANSMISSION_UPLOAD_SLOTS_PER_TORRENT=5
      - TRANSMISSION_DOWNLOAD_QUEUE_ENABLED=true
      - TRANSMISSION_DOWNLOAD_QUEUE_SIZE=20
      - TRANSMISSION_IDLE_SEEDING_LIM=5
      - TRANSMISSION_IDLE_SEEDING_LIMIT=5
      - TRANSMISSION_IDLE_SEEDING_LIMIT_ENABLED=true
      # Files
      # - TRANSMISSION_PREALLOCATION=1
      # Speed
      - TRANSMISSION_RATIO_LIMIT=2
      - TRANSMISSION_RATIO_LIMIT_ENABLED=true
      - TRANSMISSION_SPEED_LIMIT_UP=20
      - TRANSMISSION_SPEED_LIMIT_UP_ENABLED=true
    logging:
      driver: json-file
      options:
        max-size: 10m

  # Guacamole
      # Create new user and delete default user
  guacamole:
    container_name: guacamole
    image: oznu/guacamole:armhf
    restart: always
    networks:
      - ngproxy
    security_opt:
      - no-new-privileges:true
    ports:
      - $GUACAMOLE_PORT:8080
    volumes:
      - '$SERVICESDIR/guacamole:/config'
    labels:
      # WatchTower
      - "com.centurylinklabs.watchtower.monitor-only=true"

############################# MONITORING

  # Netdata - System monitoring
#  netdata:
#    container_name: netdata
#    image: netdata/netdata:latest
#    hostname: $HOST_NAME # set to fqdn of host
#    restart: unless-stopped
#    networks:
#      - ngproxy
#    ports:
#      - $NETDATA_PORT:19999
#    cap_add:
#      - SYS_PTRACE
#    security_opt:
#      - apparmor:unconfined
#      - no-new-privileges:true
#    volumes:
#      - /proc:/host/proc:ro
#      - /sys:/host/sys:ro
#      - /var/run/docker.sock:/var/run/docker.sock:ro
#    environment:
#      - PGID=$PGID

############################# NEXTCLOUD

  # References to "home" means the instance (in case there are more than one)
  
  # MariaDB NextCloud
  nextcloud_home_mariadb:
    container_name: nextcloud_home_mariadb
    image: linuxserver/mariadb:latest
    #command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: always
    networks:
      - database
    security_opt:
      - no-new-privileges:true
    ports:
      - $NEXTCLOUDMARIADB:3306
    volumes:
      - $SERVICESDIR/nextcloud_mariadb/home/config:/config
      - $SERVICESDIR/nextcloud_mariadb/home/mysql:/var/lib/mysql
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - MYSQL_ROOT_PASSWORD=$MARIADB_ROOT_PASSWORD_NEXTCLOUD
      - MYSQL_DATABASE=$MARIADB_DATABASE_NEXTCLOUD
      - MYSQL_USER=$MARIADB_USER_NEXTCLOUD
      - MYSQL_PASSWORD=$MARIADB_PASSWORD_NEXTCLOUD

  # Redis
  nextcloud_home_redis:
    container_name: nextcloud_home_redis
    image: redis
    restart: always
    command: redis-server --requirepass $REDIS_PASSWORD_NEXTCLOUD
    ports:
      - $NEXTCLOUDREDIS:6379
    networks:
      - database
    volumes:
      - $SERVICESDIR/nextcloud_redis/home/redis/data:/data

  # NextCloud
  nextcloud_home:
    container_name: nextcloud_home
    image: nextcloud
    networks:
      - database
      - ngproxy
    restart: always
    ports:
      - $NEXTCLOUD:80
    security_opt:
      - no-new-privileges:true
    links:
      - nextcloud_home_mariadb
    volumes:
      - $SERVICESDIR/nextcloud/home:/var/www/html
      - $NEXTCLOUDSTORAGEDIR/nextcloud_storage/home:/var/www/html/data
    environment: 
      - REDIS_HOST=nextcloud_home_redis
      - REDIS_HOST_PASSWORD=$REDIS_PASSWORD_NEXTCLOUD

############################# DASHBOARD

  # Heimdall Web - Unified Frontend Dashboard
  heimdall:
    container_name: heimdall
    image: linuxserver/heimdall:latest
    restart: unless-stopped
    networks:
      - ngproxy
    security_opt:
      - no-new-privileges:true
    ports:
      - "$HEIMDALL_PORT:80"
    volumes:
      - $SERVICESDIR/heimdall:/config
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ

  # Heimdall Local - Unified Frontend Alternative
  heimdall_local:
    container_name: heimdall_local
    image: linuxserver/heimdall:latest
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "$HEIMDALL_LOCAL_PORT:80"
    volumes:
      - $SERVICESDIR/heimdall_local:/config
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ

############################# MY OWN SITE VMENDIVIL.COM

  # MariaDB
  myownsite_mariadb:
    container_name: myownsite_mariadb
    image: linuxserver/mariadb:latest
    restart: always
    networks:
      - database
    security_opt:
      - no-new-privileges:true
    ports:
      - "$MYOWNSITE_MARIADB_PORT:3306"
    volumes:
      - $MYOWNSITEDIR/myownsite_mariadb/data:/config
      - $MYOWNSITEDIR/myownsite_mariadb/mysql:/var/lib/mysql
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - MYSQL_ROOT_PASSWORD=$MARIADB_ROOT_PASSWORD
      - MYSQL_DATABASE=$WORDPRESS_DB_NAME
      - MYSQL_USER=$WORDPRESS_DB_USER
      - MYSQL_PASSWORD=$WORDPRESS_DB_PASSWORD

  # PhpMyAdmin
  myownsite_phpmyadmin:
    image: ebspace/armhf-phpmyadmin
    container_name: myownsite_phpmyadmin
    restart: unless-stopped
    networks:
      - database
    security_opt:
      - no-new-privileges:true
    ports:
      - $MYOWNSITE_PHPMYADMIN:80
    links:
      - myownsite_mariadb
    environment:
      MYSQL_ROOT_PASSWORD: $MARIADB_ROOT_PASSWORD
      PMA_HOST: myownsite_mariadb
      PMA_PORT: 3306
#      PMA_ARBITRARY: 1
    
  # WordPress
    # Create file (volumes) php.conf.uploads.ini and paste below content before container creation:
    #file_uploads = On
    #memory_limit = 64M
    #upload_max_filesize = 64M
    #post_max_size = 64M
    #max_execution_time = 600
  myownsite_wordpress:
    container_name: myownsite_wordpress
    image: wordpress:5.6
    restart: always
    networks:
      - database
      - ngproxy
    security_opt:
      - no-new-privileges:true
    ports:
      - $MYOWNSITE_WORDPRESS_PORT:80
    links:
      - myownsite_mariadb
    volumes:
      - $MYOWNSITEDIR/myownsite_wordpress/config/php.conf.uploads.ini:/usr/local/etc/php/conf.d/uploads.ini # Create file in advance
      - $MYOWNSITEDIR/myownsite_wordpress/wp-app:/var/www/html # Full wordpress project
    environment:
      WORDPRESS_DB_HOST: myownsite_mariadb
      WORDPRESS_DB_NAME: $WORDPRESS_DB_NAME
      WORDPRESS_DB_USER: $WORDPRESS_DB_USER
      WORDPRESS_DB_PASSWORD: $WORDPRESS_DB_PASSWORD
    labels:
      # WatchTower
      - "com.centurylinklabs.watchtower.monitor-only=true"

############################# BLOG 30LAMOD.COM

  # MariaDB
  blog_mariadb:
    container_name: blog_mariadb
    image: linuxserver/mariadb:latest
    restart: always
    networks:
      - database
    security_opt:
      - no-new-privileges:true
    ports:
      - "$BLOG_MARIADB_PORT:3306"
    volumes:
      - $BLOGDIR/blog_mariadb/data:/config
      - $BLOGDIR/blog_mariadb/mysql:/var/lib/mysql
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - MYSQL_ROOT_PASSWORD=$MARIADB_BLOG_ROOT_PASSWORD
      - MYSQL_DATABASE=$WORDPRESS_BLOG_DB_NAME
      - MYSQL_USER=$WORDPRESS_BLOG_DB_USER
      - MYSQL_PASSWORD=$WORDPRESS_BLOG_DB_PASSWORD

  # WordPress
    # Create file (volumes) php.conf.uploads.ini and paste below content before container creation:
    #file_uploads = On
    #memory_limit = 64M
    #upload_max_filesize = 64M
    #post_max_size = 64M
    #max_execution_time = 600
  blog_wordpress:
    container_name: blog_wordpress
    image: wordpress:5.6
    restart: always
    ports:
      - $BLOG_WORDPRESS_PORT:80
    networks:
      - database
      - ngproxy
    security_opt:
      - no-new-privileges:true
    links:
      - blog_mariadb
    volumes:
#      - $BLOGDIR/blog_wordpress/config/php.conf.uploads.ini:/usr/local/etc/php/conf.d/uploads.ini # Create file in advance
      - $BLOGDIR/blog_wordpress/wp-app:/var/www/html # Full wordpress project
    environment:
      WORDPRESS_DB_HOST: blog_mariadb
      WORDPRESS_DB_NAME: $WORDPRESS_BLOG_DB_NAME
      WORDPRESS_DB_USER: $WORDPRESS_BLOG_DB_USER
      WORDPRESS_DB_PASSWORD: $WORDPRESS_BLOG_DB_PASSWORD
    labels:
      # WatchTower
      - "com.centurylinklabs.watchtower.monitor-only=true"

############################# HOME

  # Zoneminder
  # References to "home" means the instance (in case there are more than one)
  zoneminder_home:
    image: sgarzarella/zoneminder-armhf:latest
    container_name: zoneminder_home
    restart: unless-stopped
    networks:
      - ngproxy
    security_opt:
      - no-new-privileges:true
    privileged: true
    ports:
      - $ZONEMINDER_PORT:80
      - $ZONEMINDER_WEBSOCKET_PORT:9000
    environment:
      TZ: $TZ
      SHMEM: "50%"
      SSL_EVENTS: "1"
      PUID: $PUID
      PGID: $PGID
    volumes:
      - $SERVICESDIR/zoneminder/home:/config
      - $ZMVIDEODIR/zoneminder_video/home:/var/cache/zoneminder
    labels:
      # WatchTower
      - "com.centurylinklabs.watchtower.monitor-only=true"