version: "3.8"

networks:
  ngproxy:
    external:
      name: ngproxy
  database:
    external:
      name: database
  myvpn:
    external:
      name: myvpn

services:

############################# PROXY

  # Nginx Proxy Manager
  nginxmanagerproxy:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: nginxmanagerproxy
    restart: always
    networks:
      - ngproxy
      - database
    ports:
      - 80:80
      - 81:81 # UI
      - 443:443
    volumes:
      - "$PROXYDIR/nginxmanagerproxy/config.json:/app/config/production.json"
      - "$PROXYDIR/nginxmanagerproxy/data:/data"
      - "$PROXYDIR/nginxmanagerproxy/letsencrypt:/etc/letsencrypt"
    links:
      - nginxmanagerproxy_mariadb
    labels:
      # WatchTower
      - "com.centurylinklabs.watchtower.monitor-only=true"

  # MariaDB
  nginxmanagerproxy_mariadb:
    container_name: nginxmanagerproxy_mariadb
    image: linuxserver/mariadb:latest
    restart: always
    networks:
      - database
    ports:
      - 3306:3306
    volumes:
      - $PROXYDIR/nginxmanagerproxy/mysql:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=$NGINX_ROOT_PASSWORD
      - MYSQL_DATABASE=$NGINX_MYSQL_DATABASE
      - MYSQL_USER=$NGINX_MYSQL_USER
      - MYSQL_PASSWORD=$NGINX_MYSQL_PASSWORD
    labels:
      # WatchTower
      - "com.centurylinklabs.watchtower.monitor-only=true"

############################# SYSTEM

  # Dozzle - Real-time Docker Log Viewer
  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    restart: unless-stopped
    networks:
      - ngproxy
    security_opt:
      - no-new-privileges:true
    ports:
      - "$DOZZLE_PORT:8080"
    environment:
#      DOZZLE_LEVEL: info
      DOZZLE_TAILSIZE: 300
#      DOZZLE_FILTER: "status=running"
#      DOZZLE_FILTER: "label=log_me" # limits logs displayed to containers with this label
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # Portainer - WebUI for Containers
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: always
    command: --no-analytics # -H unix:///var/run/docker.sock
    networks:
      - ngproxy
    security_opt:
      - no-new-privileges:true
    ports:
      - "$PORTAINER_PORT:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $SERVICESDIR/portainer/data:/data 
    environment:
      - TZ=$TZ
    labels:
      # WatchTower
      - "com.centurylinklabs.watchtower.monitor-only=true"

  # WatchTower - Automatic Docker Container Updates
  watchtower:
    image: v2tec/watchtower
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      TZ: $TZ
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_REMOVE_VOLUMES: "true"
      WATCHTOWER_INCLUDE_STOPPED: "true"
      WATCHTOWER_NO_STARTUP_MESSAGE: "false"
      WATCHTOWER_SCHEDULE: "0 15 2 * * *" # https://pkg.go.dev/github.com/robfig/cron@v1.2.0#hdr-CRON_Expression_Format

############################# DASHBOARD

  # Heimdall Web - Unified Frontend Dashboard
#  heimdall:
#    container_name: heimdall
#    image: linuxserver/heimdall:latest
#    restart: unless-stopped
#    networks:
#      - ngproxy
#    security_opt:
#      - no-new-privileges:true
#    ports:
#      - "$HEIMDALL_PORT:80"
#    volumes:
#      - $SERVICESDIR/heimdall:/config
#    environment:
#      - PUID=$PUID
#      - PGID=$PGID
#      - TZ=$TZ

  # Heimdall Local - Unified Frontend Alternative
#  heimdall_local:
#    container_name: heimdall_local
#    image: linuxserver/heimdall:latest
#    restart: unless-stopped
#    security_opt:
#      - no-new-privileges:true
#    ports:
#      - "$HEIMDALL_LOCAL_PORT:80"
#    volumes:
#      - $SERVICESDIR/heimdall_local:/config
#    environment:
#      - PUID=$PUID
#      - PGID=$PGID
#      - TZ=$TZ
